/* tslint:disable */
/* eslint-disable */
/**
 * endpoints
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { TravelMode } from './TravelMode';
import {
    TravelModeFromJSON,
    TravelModeFromJSONTyped,
    TravelModeToJSON,
    TravelModeToJSONTyped,
} from './TravelMode';
import type { Location } from './Location';
import {
    LocationFromJSON,
    LocationFromJSONTyped,
    LocationToJSON,
    LocationToJSONTyped,
} from './Location';

/**
 * 
 * @export
 * @interface RequirementRequest
 */
export interface RequirementRequest {
    /**
     * 
     * @type {string}
     * @memberof RequirementRequest
     */
    cityCode: string;
    /**
     * 
     * @type {Array<Location>}
     * @memberof RequirementRequest
     */
    locations: Array<Location>;
    /**
     * 
     * @type {string}
     * @memberof RequirementRequest
     */
    requirementId: string;
    /**
     * 
     * @type {number}
     * @memberof RequirementRequest
     */
    toleratedDuration: number;
    /**
     * 
     * @type {TravelMode}
     * @memberof RequirementRequest
     */
    travelMode: TravelMode;
}



/**
 * Check if a given object implements the RequirementRequest interface.
 */
export function instanceOfRequirementRequest(value: object): value is RequirementRequest {
    if (!('cityCode' in value) || value['cityCode'] === undefined) return false;
    if (!('locations' in value) || value['locations'] === undefined) return false;
    if (!('requirementId' in value) || value['requirementId'] === undefined) return false;
    if (!('toleratedDuration' in value) || value['toleratedDuration'] === undefined) return false;
    if (!('travelMode' in value) || value['travelMode'] === undefined) return false;
    return true;
}

export function RequirementRequestFromJSON(json: any): RequirementRequest {
    return RequirementRequestFromJSONTyped(json, false);
}

export function RequirementRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): RequirementRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'cityCode': json['city_code'],
        'locations': ((json['locations'] as Array<any>).map(LocationFromJSON)),
        'requirementId': json['requirement_id'],
        'toleratedDuration': json['tolerated_duration'],
        'travelMode': TravelModeFromJSON(json['travel_mode']),
    };
}

export function RequirementRequestToJSON(json: any): RequirementRequest {
    return RequirementRequestToJSONTyped(json, false);
}

export function RequirementRequestToJSONTyped(value?: RequirementRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'city_code': value['cityCode'],
        'locations': ((value['locations'] as Array<any>).map(LocationToJSON)),
        'requirement_id': value['requirementId'],
        'tolerated_duration': value['toleratedDuration'],
        'travel_mode': TravelModeToJSON(value['travelMode']),
    };
}

