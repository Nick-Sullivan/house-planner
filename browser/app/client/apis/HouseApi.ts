/* tslint:disable */
/* eslint-disable */
/**
 * server
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  ErrorResponse,
  HouseResponse,
  PaginatedResponseHouseResponse,
} from '../models/index';
import {
    ErrorResponseFromJSON,
    ErrorResponseToJSON,
    HouseResponseFromJSON,
    HouseResponseToJSON,
    PaginatedResponseHouseResponseFromJSON,
    PaginatedResponseHouseResponseToJSON,
} from '../models/index';

export interface GetHouseByIdRequest {
    id: number;
}

export interface GetHousesRequest {
    page?: number;
    pageSize?: number;
}

/**
 * 
 */
export class HouseApi extends runtime.BaseAPI {

    /**
     */
    async getHouseByIdRaw(requestParameters: GetHouseByIdRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<HouseResponse>> {
        if (requestParameters['id'] == null) {
            throw new runtime.RequiredError(
                'id',
                'Required parameter "id" was null or undefined when calling getHouseById().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/houses/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters['id']))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => HouseResponseFromJSON(jsonValue));
    }

    /**
     */
    async getHouseById(requestParameters: GetHouseByIdRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<HouseResponse> {
        const response = await this.getHouseByIdRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async getHousesRaw(requestParameters: GetHousesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PaginatedResponseHouseResponse>> {
        const queryParameters: any = {};

        if (requestParameters['page'] != null) {
            queryParameters['page'] = requestParameters['page'];
        }

        if (requestParameters['pageSize'] != null) {
            queryParameters['page_size'] = requestParameters['pageSize'];
        }

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/houses`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => PaginatedResponseHouseResponseFromJSON(jsonValue));
    }

    /**
     */
    async getHouses(requestParameters: GetHousesRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PaginatedResponseHouseResponse> {
        const response = await this.getHousesRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
