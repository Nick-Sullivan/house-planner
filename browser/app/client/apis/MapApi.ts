/* tslint:disable */
/* eslint-disable */
/**
 * endpoints
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  ErrorResponse,
  MapRequest,
  MapResponse,
  RequirementRequest,
} from '../models/index';
import {
    ErrorResponseFromJSON,
    ErrorResponseToJSON,
    MapRequestFromJSON,
    MapRequestToJSON,
    MapResponseFromJSON,
    MapResponseToJSON,
    RequirementRequestFromJSON,
    RequirementRequestToJSON,
} from '../models/index';

export interface GetMapRequest {
    mapRequest: MapRequest;
}

export interface PostRequirementRequest {
    requirementRequest: RequirementRequest;
}

/**
 * 
 */
export class MapApi extends runtime.BaseAPI {

    /**
     */
    async getMapRaw(requestParameters: GetMapRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<MapResponse>> {
        if (requestParameters['mapRequest'] == null) {
            throw new runtime.RequiredError(
                'mapRequest',
                'Required parameter "mapRequest" was null or undefined when calling getMap().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/maps/map`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: MapRequestToJSON(requestParameters['mapRequest']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => MapResponseFromJSON(jsonValue));
    }

    /**
     */
    async getMap(requestParameters: GetMapRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<MapResponse> {
        const response = await this.getMapRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async postRequirementRaw(requestParameters: PostRequirementRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<object>> {
        if (requestParameters['requirementRequest'] == null) {
            throw new runtime.RequiredError(
                'requirementRequest',
                'Required parameter "requirementRequest" was null or undefined when calling postRequirement().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/maps/requirement`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: RequirementRequestToJSON(requestParameters['requirementRequest']),
        }, initOverrides);

        return new runtime.JSONApiResponse<any>(response);
    }

    /**
     */
    async postRequirement(requestParameters: PostRequirementRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<object> {
        const response = await this.postRequirementRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
